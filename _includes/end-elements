{% comment %}
After this comment block, include any links and scripts
that you want just before the </body> tag in your HTML.
Use Liquid logic tags to include only in certain outputs, e.g.
`if site.output == "web"` for scripts like search.js.
{% endcomment %}


{% comment %}
Add a bundle of JS and site search.
{% endcomment %}
{% if site.output == "web" or site.output == "app" %}
<script src="{{ path-to-root-directory }}assets/js/bundle.js"></script>

    {% if is-project-search or is-book-search %}
    <script src="{{ path-to-root-directory }}assets/js/search-engine.js"></script>
    <script src="{{ path-to-root-directory }}assets/js/search-index.js"></script>
    <script src="{{ path-to-root-directory }}assets/js/search-results.js"></script>
    {% endif %}

{% endif %}


{% comment %}
This script gives every heading a title attribute.
This is useful to Prince, which can use title attributes for running heads.
By default, we only load it for PDF outputs.
{% endcomment %}
{% if site.output == "print-pdf" or site.output == "screen-pdf" %}
<script src="{{ path-to-root-directory }}assets/js/heading-titles.js"></script>
<script src="{{ path-to-root-directory }}assets/js/rotate.js"></script>
{% endif %}


{% comment %}Localisation of Javascript-driven text{% endcomment %}
{% if site.output == "web" or site.output == "app" %}

    {% comment %} Localise Google CSE search snippets and
    question check-answers button. {% endcomment %}
    <script>

        document.querySelector('.search input.search-box').placeholder='{{ locale.search.placeholder }}';

        var questionButtons = document.querySelectorAll('.question .check-answer-button');
        function replaceText(button) {
            button.innerHTML='{{ locale.questions.check-answers-button }}';
        }
        questionButtons.forEach(replaceText);

    </script>

    {% comment %}Localise question-answer feedback prompts{% endcomment %}
    <style>
        .js-mcq .mcq-correct .mcq-feedback:before {
            content: "{{ locale.questions.feedback-correct }}";
        }
        .js-mcq .mcq-incorrect .mcq-feedback:before {
            content: "{{ locale.questions.feedback-incorrect }}";
        }
        .js-mcq .mcq-partially-correct .mcq-feedback:before {
            content: "{{ locale.questions.feedback-unfinished }}";
        }
    </style>
{% endif %}
